var T=Object.defineProperty,M=(e,o)=>{for(var n in o)T(e,n,{get:o[n],enumerable:!0})};function v(e){let o=d=>e[d],n=d=>e[d].get();return{fetch:n,mutate:(d,t)=>{let r=t(n(d));return e[d].set(r),v(e)},get:()=>e,entry:o}}var f=(e,o)=>Object.entries(e).reduce((n,[a,i])=>({...n,[a]:o(a,i)}),{}),p="__NATIVE_FEDERATION__",S=(e,o)=>{globalThis[p]||(globalThis[p]={});let n=globalThis[p],a={get(){return n[e]??o},set(i){return n[e]=i,a},exists(){return e in n}};return a},R=e=>f(e,S),H={externals:{},remoteNamesToRemote:{},baseUrlToRemoteNames:{}},y=f(H,S),I=()=>({createImportMap:n=>(document.head.appendChild(Object.assign(document.createElement("script"),{type:"importmap-shim",innerHTML:JSON.stringify(n)})),n),importModule:async n=>globalThis.importShim(n)}),F=e=>{let o=e.split("/");return o.pop(),o.join("/")},m=(e,o)=>(e=e.startsWith("/")?e.slice(1):e,o=o.endsWith("/")?o.slice(0,-1):o,`${e}/${o}`),w=e=>{let o=()=>({imports:{},scopes:{}}),n=t=>t.reduce((r,s)=>({imports:{...r.imports,...s.imports},scopes:{...r.scopes,...s.scopes}}),o()),a=(t,r)=>t.exposes.reduce((s,c)=>({...s,[m(r,c.key)]:m(t.baseUrl,c.outFileName)}),{}),i=t=>({[t.baseUrl+"/"]:e.mapSharedDeps(t)});return{toImportMap:(t,r)=>(r||(r=t.name),{imports:a(t,r),scopes:i(t)}),createEmpty:o,merge:n}},_=(e,o,n,a,i)=>{let d=(c={})=>typeof c=="string"?fetch(c).then(l=>l.json()):Promise.resolve(c),t=([c,l])=>n.loadRemoteInfo(l,c).then(E=>a.toImportMap(E,c)).catch(E=>(o.warn(`Error loading remoteEntry for ${c} at '${l}', skipping module`),a.createEmpty())),r=c=>Promise.all(Object.entries(c).map(t)).then(a.merge);return{init:(c={})=>d(c).then(r).then(e.createImportMap).then(l=>({importMap:l,load:i.load}))}},g={debug:0,warn:1,error:2},L=(e,o)=>Object.keys(g).filter(a=>isNaN(Number(a))).reduce((a,i)=>({...a,[i]:d=>{g[i]>=g[e]&&o[i](d)}}),{}),j={debug:e=>{},error:e=>{},warn:e=>{}},u=class extends Error{constructor(e){super(e),this.name="NFError"}},x=(e,o,n)=>{let a=t=>fetch(t).then(r=>r.json()).then(r=>({...r,baseUrl:F(t)})),i=(t,r)=>(e.mutate("remoteNamesToRemote",s=>({...s,[r]:t})),e.mutate("baseUrlToRemoteNames",s=>({...s,[t.baseUrl]:r})),o.debug(`Added remote '${r}' to the cache.`),t);return{loadRemoteInfo:(t,r)=>{if(!r&&t&&(r=e.fetch("baseUrlToRemoteNames")[F(t)]),!r)return Promise.reject(new u("Must provide valid remoteEntry or remoteName"));let s=e.fetch("remoteNamesToRemote")[r];return s?(o.debug(`Remote '${s.name}' retrieved from cache.`),Promise.resolve(s)):t?(o.debug(`Fetching '${r}' remoteEntry.json from: `+t),a(t).then(c=>i(c,r??c.name)).then(n.addSharedDepsToCache).catch(c=>(o.error("Failed to load remoteEntry: "+(c?.message??c)),Promise.reject(new u("Failed to load remoteEntry"))))):Promise.reject(new u(`Module not registered, provide a valid remoteEntryUrl for '${r}'`))}}},h=e=>`${e.packageName}@${e.version}`,D=e=>{let o=d=>e.fetch("externals")[h(d)],n=d=>d.shared.reduce((t,r)=>({...t,[r.packageName]:o(r)||m(d.baseUrl,r.outFileName)}),{}),a=d=>t=>d.shared.reduce((r,s)=>(r[h(s)]||(r[h(s)]=m(d.baseUrl,s.outFileName)),r),t);return{mapSharedDeps:n,addSharedDepsToCache:d=>(e.mutate("externals",a(d)),d)}},P=(e,o,n)=>{let a=(t,r)=>{if(typeof t=="string"&&r)return{remoteName:t,exposedModule:r};if(typeof t=="object"&&!r)return t;throw e.error("Failed to load remote module: exposedModule and/or remoteName not provided"),new u("Failed to load remote module")},i=(t,r)=>{let s=t.exposes.find(c=>c.key===r);if(!s)throw e.error(`Module '${r}'is not exposed in remote '${t.name}'`),new u("Failed to load remote module");return m(t.baseUrl,s.outFileName)};return{load:(t,r)=>{let s=a(t,r);if(e.debug(`Loading module ${JSON.stringify(s)}`),!s.remoteName||s.remoteName==="")throw new u("remoteName cannot be empty");return o.loadRemoteInfo(s.remoteEntry,s.remoteName).then(c=>i(c,s.exposedModule)).then(c=>(e.debug("Importing module: "+c),c)).then(n.importModule)}}},A=e=>({cache:e.cache??y,logger:e.logger??j,logLevel:e.logLevel??"error"}),O=({cache:e,logger:o,logLevel:n})=>{let a=I(),i=v(e),d=L(n,o),t=D(i),r=x(i,d,t),s=w(t),c=P(d,r,a),l=_(a,d,r,s,c);return{domHandler:a,cacheHandler:i,logHandler:d,sharedInfoHandler:t,remoteInfoHandler:r,importMapHandler:s,remoteModuleHandler:c,initFederationHandler:l}},N=(e={},o={})=>{let{initFederationHandler:n}=O(A(o));return n.init(e)};var J={};M(J,{DEFAULT_CACHE:()=>y,NAMESPACE:()=>p,cacheHandlerFactory:()=>v,createGlobalCache:()=>R,toCache:()=>f});var $={debug:e=>console.log(`[DEBUG]: ${e}`),error:e=>console.error(`[NF]: ${e}`),warn:e=>console.warn(`[NF]: ${e}`)};var U=(e,o)=>Object.entries(e).reduce((n,[a,i])=>({...n,[a]:o(a,i)}),{}),b="__NATIVE_FEDERATION__",G=(e,o)=>{let n={get(){let a=sessionStorage.getItem(`${b}.${e}`)??JSON.stringify(o);return JSON.parse(a)},set(a){let i=typeof a=="string"?a:JSON.stringify(a);return sessionStorage.setItem(`${b}.${e}`,i),n},exists(){return!!sessionStorage.getItem(`${b}.${e}`)}};return n},C=e=>U(e,G);N("http://localhost:3000/native-federation",{cache:C({externals:{},remoteNamesToRemote:{},baseUrlToRemoteNames:{}}),logLevel:"debug",logger:$}).then(({load:e,importMap:o})=>{console.log("importMap: ",o),window.dispatchEvent(new CustomEvent("mfe-loader-available",{detail:{load:e}}))});
//# sourceMappingURL=loader.js.map
